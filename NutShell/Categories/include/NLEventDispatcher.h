/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina <macmade@eosgarden.com>
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id: NLEventDispatcher.h 248 2010-08-25 14:12:28Z  $ */

/*!
 * @header
 * 
 * @discussion  This file should not be included directly by application source
 *              files using the NutShell framework. Including 'NutShell.h' is
 *              preferred over importing individual files because it will use a
 *              precompiled version.
 */

// Used classes
@class NLEvent;

/*!
 * @abstract    NSObject additions to provide an event dispatcher on all Cocoa objects
 * 
 * @version     1.0
 * @namespace   NutShell
 */
@interface NSObject( NLEventDispatcher )

/*!
 * @abstract    Dispatches a named event
 * 
 * @param       name    The name of the event to dispatch
 " @return      void
 */
- ( void )dispatchEvent: ( NSString * )name;

/*!
 * @abstract    Dispatches an named event with a specific target
 * 
 * @param       name    The name of the event to dispatch
 * @param       target  The event's target object
 " @return      void
 */
- ( void )dispatchEvent: ( NSString * )name target: ( id )target;

/*!
 * @abstract    Dispatches an event object
 * 
 * @param       event   The event object to dispatch
 " @return      void
 */
- ( void )dispatchEventObject: ( NLEvent * )event;

/*!
 * @abstract    Adds an event listener on an event of the current object
 * 
 * @param       name        The name of the event to listen
 * @param       target      The target class instance
 * @param       selector    The selector for the method of the target
 " @return      void
 */
- ( NSUInteger )addEventListener: ( NSString * )name target: ( id )target selector: ( SEL )selector;

/*!
 * @abstract    Adds an event listener on an event of the current object
 * 
 * @param       name        The name of the event to listen
 * @param       target      The target class instance
 * @param       selector    The selector for the method of the target
 * @param       priority    The priority of the event listener
 " @return      void
 */
- ( NSUInteger )addEventListener: ( NSString * )name target: ( id )target selector: ( SEL )selector priority: ( int )priority;

/*!
 * @abstract    Checks if the object has event listener(s) for a specific event
 * 
 * @param       name    The name of the event for which to check for event listeners
 " @return      True if the object has event listener(s) for the specified event, otherwise false
 */
- ( BOOL )hasEventListener: ( NSString * )name;

@end
