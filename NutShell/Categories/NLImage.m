/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id: NLImage.m 245 2010-05-30 14:18:05Z  $ */

#import <QuickLook/QuickLook.h>

#import "NLImage.h"

@implementation NSImage( NLImage )

+ ( NSImage * )previewImageForFile:( NSString * )path size:( NSSize )size
{
    CGImageRef img;
    NSURL            * file;
    NSDictionary     * options;
    NSImage          * preview;
    NSBitmapImageRep * bitmap;
    
    file    = [ NSURL fileURLWithPath: path ];
    options = [ NSDictionary dictionary ];
    
    if ( !file )
    {
        return nil;
    }
    
    img = QLThumbnailImageCreate( kCFAllocatorDefault, ( CFURLRef )file, CGSizeMake( size.width, size.height ), ( CFDictionaryRef )options );
    
    if( img == NULL )
    {
        preview = [ [ NSWorkspace sharedWorkspace ] iconForFile: path ];
        
        [ preview setSize: size ];
        
        return preview;
    }
    
    bitmap = [ [ NSBitmapImageRep alloc ] initWithCGImage: img ];
    
    CFRelease( img );
    
    if ( !bitmap )
    {
        return nil;
    }
    
    preview = [ [ NSImage alloc ] initWithSize: [ bitmap size ] ];
    
    [ preview addRepresentation: bitmap ];
    [ bitmap release ];
    
    return [ preview autorelease ];
}

@end
